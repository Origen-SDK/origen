% render "layouts/guides.html" do

Origen can be installed on Linux or Windows, this guide refers to the Windows installation.

If you want to run on Linux then please see this guide instead:
[How to Install Origen on Linux](<%= path "guides/starting/installing" %>)

If you want to run on Linux Subsystem for Windows then please see this guide instead:
[How to Install Origen on Linux Subsystem for Windows](<%= path "guides/starting/installlsw" %>)

<div class="alert alert-info" role="alert"> <strong>Last updated on 15th February 2017</strong>
  <br>The vast majority of Origen use in production is on Linux, and over time this Windows guide can
  become out of date and no one realizes.
  If you do experience any issues when following this guide, then please do let us
  know <a href="<%= path "guides/starting/installwin" %>/#Comments">via the comments below</a> and we will update it as required.
</div>


### 1. Install a Better Console

Download Console [by following this link](https://sourceforge.net/projects/console/files/latest/download?source=typ_redirect).

Move the .zip file to <code>C:/Program Files</code>, then right click it and select <code>Extract All...</code>.

Open the unzipped folder and right click on <code>Console.exe</code> and select <code>Send to > Desktop (create shortcut)</code>.

Open the console from your desktop and execute the following command, we recommend that you create all of
your Origen application workspaces in <code>C:\origen</code>:

~~~text
mkdir C:\origen
~~~

Select <code>Edit > Settings</code> from the console menu and enable the checkbox at the bottom
of the settings called <code>Save settings to user directory</code>.

Execute the following command to get a sensible set settings to start off with:

~~~text
@powershell New-Item -ItemType directory -Force -Path %appdata%\Console; (new-object System.Net.WebClient).DownloadFile('http://origen-sdk.org/files/console.xml','%appdata%\Console\console.xml')
~~~

<div class="alert alert-info" role="alert"> <strong>Opening the Console</strong>
  <br>
  The rest of this guide requires you to open the console with administrator privileges and then execute
  the given commands, do this by right-clicking on the desktop shortcut you just created and selecting
  <code>Run as administrator</code>.
  <br>
  Some of the operations will require that you open a new console session in order for the previous operation
  to take effect. If any errors are encountered please start a new console session and try again before
  reporting it.
</div>

### 2. Install Pre-Requisites

Before starting this next section you should ensure that the following environment variables
are set if your computer accesses the internet via a proxy (the proxy url here is an example and
the real one will be specific to your company environment):

~~~text
HTTP_PROXY  = http://proxy.my_company.com:8080
HTTPS_PROXY = https://proxy.my_company.com:8080
~~~

Here is a link to a 3rd party tutorial on [How to Create an Environment Variable in Windows](https://kb.wisc.edu/cae/page.php?id=24500).


The next step is to install a package manager, please copy the text below into the console (running as administrator)

~~~text
@powershell -NoProfile -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
~~~

<div class="alert alert-danger" role="alert">Now re-open the console (Run as administrator)</div>

Install some required packages by running these commands from the console:

~~~tetxt
choco install git -y --force
choco install unxutils -y --force
choco install consoleZ -y --force
~~~

<div class="alert alert-danger" role="alert">Now re-open the console (Run as administrator)</div>

### 3. Install Ruby

#### 3.1 Install the Ruby Executable

~~~text
choco install ruby -y --version=2.3 --force
choco install ruby2.devkit -y --force
~~~

<div class="alert alert-danger" role="alert">Now re-open the console (Run as administrator)</div>

Execute the following command from the console:

#### 3.2 Install RubyGems

~~~text
@powershell (new-object System.Net.WebClient).DownloadFile('https://rubygems.org/downloads/rubygems-update-2.7.3.gemâ€™,'C:\rubygems-update-2.7.3.gem') && gem install --local C:\rubygems-update-2.7.3.gem && update_rubygems --no-ri --no-rdoc && gem uninstall rubygems-update -x
~~~

<div class="alert alert-danger">
  The version of Ruby is just a recommendation from the Origen development team. Origen has proven to
  work on several versions of Ruby. However, changing the version of Ruby may also require you to reevaluate
  the version of RubyGems used. For example, we've found that Ruby 2.2.4, is not fully compatible RubyGems 2.6.7,
  for all gems (we run into issues with Symlinks on Windows that are resolved by updating RubyGems) but
  it works with RubyGems 2.2.3. Also, the version of RubyGems that ships with your installation of Ruby may be
  fine. See the <a href="http://guides.rubygems.org/rubygems-basics/">RubyGems website</a> for additional details.
  <br>
  <br>
  The conclusion of this alert box is don't stress too much about the exact versions you're using and if you
  run into issues installing gems, consider possible incompatabilities between the versions of Ruby, RubyGems,
  or the gem that you are trying to install. You can also use RubyGems to manually install the gems yourself,
  to bypass any installation options Origen may try to set.
</div>

Open <code>C:\tools\DevKit2\config.yml</code> in your favorite editor and write this at the
bottom:

~~~text
- C:/tools/ruby23
~~~

Save it, and then execute the following commands from the console:

~~~text
cd C:\tools\DevKit2\
ruby dk.rb install
~~~

Ensure that you see the following output when running the above command, if not review
what you have added to <code>C:\tools\DevKit2\config.yml</code>:

~~~text
[INFO] Installing 'C:/tools/ruby22/lib/ruby/site_ruby/2.2.0/rubygems/default
[INFO] Installing 'C:/tools/ruby22/lib/ruby/site_ruby/devkit.rb'
~~~

<div class="alert alert-danger" role="alert">Now re-open the console (Run as administrator)</div>

### 4. Install Origen

Finally, run this command to install Origen:

~~~text
gem install origen --no-ri --no-rdoc
~~~

This can take several minutes to finish without updating the screen, so please be patient.

You can then verify Origen availability by running <code>origen -v</code>
at which point you should see something like this:

~~~text
    Origen: <%= Origen.version %>
~~~

Congratulations, Origen is now installed!

Some users have reported an error at this point which complains about the <code>HOME</code>
environment variable not being set.

If you see that, set it to something like this by
following this 3rd party tutorial on [How to Create an Environment Variable in Windows](https://kb.wisc.edu/cae/page.php?id=24500):

~~~text
HOME = C:\Users\my_user_id
~~~



Note that the version of Origen that is installed to your Ruby installation does not need to
be kept up to date with the latest version of Origen. You can now consider your Ruby environment
to be frozen for the foreseeable future.

See the section on [Understanding Gems](<%= path "guides/starting/gems" %>) for details on
why that is.

% end
